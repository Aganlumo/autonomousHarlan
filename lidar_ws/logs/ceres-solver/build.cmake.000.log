Not searching for unused variables given on the command line.
[36m--[0m The C compiler identification is GNU 5.4.0
[36m--[0m The CXX compiler identification is GNU 5.4.0
[36m--[0m Check for working C compiler: /usr/bin/cc
[36m--[0m Check for working C compiler: /usr/bin/cc -- works
[36m--[0m Detecting C compiler ABI info
[36m--[0m Detecting C compiler ABI info - done
[36m--[0m Detecting C compile features
[36m--[0m Detecting C compile features - done
[36m--[0m Check for working CXX compiler: /usr/bin/c++
[36m--[0m Check for working CXX compiler: /usr/bin/c++ -- works
[36m--[0m Detecting CXX compiler ABI info
[36m--[0m Detecting CXX compiler ABI info - done
[36m--[0m Detecting CXX compile features
[36m--[0m Detecting CXX compile features - done
[36m--[0m Detected Ceres being used as a git submodule, adding commit hook for Gerrit to: /home/agustin/lidar_ws/src/ceres-solver/.git
[36m--[0m Detected Ceres version: 1.13.0 from /home/agustin/lidar_ws/src/ceres-solver/include/ceres/version.h
[36m--[0m No preference for use of exported Eigen CMake configuration set, and no hints for include directory provided. Defaulting to preferring an installed/exported Eigen CMake configuration if available.
[36m--[0m Found installed version of Eigen: /usr/lib/cmake/eigen3
[36m--[0m Found Eigen: /usr/include/eigen3 (found version "3.2.92")
[36m--[0m Found Eigen version 3.2.92: /usr/include/eigen3

   ===============================================================
   Disabling the use of Eigen as a sparse linear algebra library.
   This does not affect the covariance estimation algorithm
   which can still use the EIGEN_SPARSE_QR algorithm.
   ===============================================================

[36m--[0m Looking for dgemm_
[36m--[0m Looking for dgemm_ - found
[36m--[0m Looking for pthread.h
[36m--[0m Looking for pthread.h - found
[36m--[0m Looking for pthread_create
[36m--[0m Looking for pthread_create - not found
[36m--[0m Looking for pthread_create in pthreads
[36m--[0m Looking for pthread_create in pthreads - not found
[36m--[0m Looking for pthread_create in pthread
[36m--[0m Looking for pthread_create in pthread - found
[36m--[0m Found Threads: TRUE
[36m--[0m A library with BLAS API found.
[36m--[0m Found LAPACK library: /usr/lib/liblapack.so;/usr/lib/libf77blas.so;/usr/lib/libatlas.so
[36m--[0m Found BLAS library: /usr/lib/libf77blas.so;/usr/lib/libatlas.so
[36m--[0m A library with BLAS API found.
[36m--[0m Found AMD headers in: /usr/include/suitesparse
[36m--[0m Found AMD library: /usr/lib/x86_64-linux-gnu/libamd.so
[36m--[0m Found CAMD headers in: /usr/include/suitesparse
[36m--[0m Found CAMD library: /usr/lib/x86_64-linux-gnu/libcamd.so
[36m--[0m Found COLAMD headers in: /usr/include/suitesparse
[36m--[0m Found COLAMD library: /usr/lib/x86_64-linux-gnu/libcolamd.so
[36m--[0m Found CCOLAMD headers in: /usr/include/suitesparse
[36m--[0m Found CCOLAMD library: /usr/lib/x86_64-linux-gnu/libccolamd.so
[36m--[0m Found CHOLMOD headers in: /usr/include/suitesparse
[36m--[0m Found CHOLMOD library: /usr/lib/x86_64-linux-gnu/libcholmod.so
[36m--[0m Found SUITESPARSEQR headers in: /usr/include/suitesparse
[36m--[0m Found SUITESPARSEQR library: /usr/lib/x86_64-linux-gnu/libspqr.so
[36m--[0m Found TBB library: /usr/lib/x86_64-linux-gnu/libtbb.so
[36m--[0m Found Intel Thread Building Blocks (TBB) library: /usr/lib/x86_64-linux-gnu/libtbb.so, assuming SuiteSparseQR was compiled with TBB.
[36m--[0m Found TBB_MALLOC library: /usr/lib/x86_64-linux-gnu/libtbbmalloc.so
[36m--[0m Found Intel Thread Building Blocks (TBB) Malloc library: /usr/lib/x86_64-linux-gnu/libtbbmalloc.so
[36m--[0m Found SUITESPARSE_CONFIG headers in: /usr/include/suitesparse
[36m--[0m Found SUITESPARSE_CONFIG library: /usr/lib/x86_64-linux-gnu/libsuitesparseconfig.so
[36m--[0m Found LIBRT library: /usr/lib/x86_64-linux-gnu/librt.so
[36m--[0m Adding librt: /usr/lib/x86_64-linux-gnu/librt.so to SuiteSparse_config libraries (required on Linux & Unix [not OSX] if SuiteSparse is compiled with timing).
[36m--[0m Did not find METIS library (optional SuiteSparse dependency)
[36m--[0m Found SuiteSparse: TRUE (found version "4.4.6")
[36m--[0m Found SuiteSparse 4.4.6, building with SuiteSparse.
[36m--[0m Found CXSparse: /usr/include/suitesparse (found version "3.1.4")
[36m--[0m Found CXSparse version: 3.1.4, building with CXSparse.
[36m--[0m No preference for use of exported gflags CMake configuration set, and no hints for include/library directories provided. Defaulting to preferring an installed/exported gflags CMake configuration if available.
[36m--[0m Failed to find installed gflags CMake configuration, searching for gflags build directories exported with CMake.
[36m--[0m Failed to find an installed/exported CMake configuration for gflags, will perform search for installed gflags components.
[36m--[0m Performing Test GFLAGS_IN_GOOGLE_NAMESPACE
[36m--[0m Performing Test GFLAGS_IN_GOOGLE_NAMESPACE - Success
[36m--[0m Found Gflags: /usr/include
[36m--[0m Found Google Flags header in: /usr/include, in namespace: google
[36m--[0m No preference for use of exported glog CMake configuration set, and no hints for include/library directories provided. Defaulting to preferring an installed/exported glog CMake configuration if available.
[36m--[0m Failed to find installed glog CMake configuration, searching for glog build directories exported with CMake.
[36m--[0m Failed to find an installed/exported CMake configuration for glog, will perform search for installed glog components.
[36m--[0m Found Glog: /usr/include
[36m--[0m Found Google Log (glog). Assuming glog was built with gflags support as gflags was found. This will make gflags a public dependency of Ceres.
[36m--[0m Building with OpenMP.
[36m--[0m Performing Test COMPILER_HAS_CXX11_FLAG
[36m--[0m Performing Test COMPILER_HAS_CXX11_FLAG - Success
[36m--[0m Looking for C++ include unordered_map
[36m--[0m Looking for C++ include unordered_map - not found
[36m--[0m Looking for C++ include tr1/unordered_map
[36m--[0m Looking for C++ include tr1/unordered_map - found
[36m--[0m Found tr1/unordered_map/set in std::tr1 namespace.
[36m--[0m Looking for C++ include memory
[36m--[0m Looking for C++ include memory - found
[36m--[0m Performing Test HAVE_SHARED_PTR_IN_STD_NAMESPACE
[36m--[0m Performing Test HAVE_SHARED_PTR_IN_STD_NAMESPACE - Failed
[36m--[0m Performing Test HAVE_SHARED_PTR_IN_TR1_NAMESPACE
[36m--[0m Performing Test HAVE_SHARED_PTR_IN_TR1_NAMESPACE - Failed
[36m--[0m Looking for C++ include tr1/memory
[36m--[0m Looking for C++ include tr1/memory - found
[36m--[0m Performing Test HAVE_SHARED_PTR_IN_TR1_NAMESPACE_FROM_TR1_MEMORY_HEADER
[36m--[0m Performing Test HAVE_SHARED_PTR_IN_TR1_NAMESPACE_FROM_TR1_MEMORY_HEADER - Success
[36m--[0m Found shared_ptr in std::tr1 namespace using <tr1/memory> header.
[36m--[0m Building Ceres as a static library.
[36m--[0m No build type specified; defaulting to CMAKE_BUILD_TYPE=Release.
[36m--[0m Creating configured Ceres config.h output directory: /home/agustin/lidar_ws/build/ceres-solver/config/ceres/internal
[36m--[0m Enabling CERES_USE_OPENMP in Ceres config.h
[36m--[0m Enabling CERES_HAVE_PTHREAD in Ceres config.h
[36m--[0m Enabling CERES_HAVE_RWLOCK in Ceres config.h
[36m--[0m Enabling CERES_TR1_UNORDERED_MAP in Ceres config.h
[36m--[0m Enabling CERES_TR1_MEMORY_HEADER in Ceres config.h
[36m--[0m Enabling CERES_TR1_SHARED_PTR in Ceres config.h
[36m--[0m Build the examples.
[36m--[0m Configuring done
[36m--[0m Generating done
[36m--[0m Build files have been written to: /home/agustin/lidar_ws/build/ceres-solver
